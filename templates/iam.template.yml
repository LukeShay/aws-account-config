Description: CloudFormation template for initializing AWS IAM
Resources:
  AdminUserGroup:
    Type: AWS::IAM::Group
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  StandardUserGroup:
    Type: AWS::IAM::Group
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
  ReadOnlyUserGroup:
    Type: AWS::IAM::Group
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
  AmplifyUserGroup:
    Type: AWS::IAM::Group
  AmplifyUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AmplifyUserPolicy
      Groups:
        - !Ref AmplifyUserGroup
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - amplify:ListApps
              - amplify:ListBranches
              - amplify:ListDomainAssociations
              - amplify:GetApp
              - amplify:CreateBranch
              - amplify:DeleteBranch
              - amplify:UpdateApp
              - amplify:CreateApp
              - amplify:GetBackendEnvironment
              - amplify:CreateBackendEnvironment
              - amplify:DeleteBackendEnvironment
              - amplify:ListBackendEnvironments
              - apigateway:DELETE
              - apigateway:GET
              - apigateway:PATCH
              - apigateway:POST
              - apigateway:PUT
              - appsync:CreateGraphqlApi
              - appsync:CreateFunction
              - appsync:ListFunctions
              - appsync:GetSchemaCreationStatus
              - appsync:UpdateResolver
              - appsync:GetFunction
              - appsync:GetResolver
              - appsync:UpdateType
              - appsync:ListGraphqlApis
              - appsync:CreateApiKey
              - appsync:UpdateApiKey
              - appsync:ListTypes
              - appsync:CreateDataSource
              - appsync:GraphQL
              - appsync:UpdateDataSource
              - appsync:DeleteDataSource
              - appsync:ListDataSources
              - appsync:DeleteResolver
              - appsync:GetDataSource
              - appsync:ListApiKeys
              - appsync:ListResolversByFunction
              - appsync:UpdateGraphqlApi
              - appsync:CreateResolver
              - appsync:UpdateFunction
              - appsync:GetGraphqlApi
              - appsync:DeleteGraphqlApi
              - appsync:DeleteFunction
              - appsync:GetIntrospectionSchema
              - appsync:CreateType
              - appsync:DeleteApiKey
              - appsync:StartSchemaCreation
              - appsync:ListResolvers
              - appsync:DeleteType
              - appsync:GetType
              - cloudformation:CreateChangeSet
              - cloudformation:CreateStack
              - cloudformation:CreateStackSet
              - cloudformation:DeleteStack
              - cloudformation:DeleteStackSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStackResources
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackSet
              - cloudformation:DescribeStackSetOperation
              - cloudformation:ExecuteChangeSet
              - cloudformation:GetTemplate
              - cloudformation:UpdateStack
              - cloudformation:UpdateStackSet
              - cloudfront:CreateCloudFrontOriginAccessIdentity
              - cloudfront:CreateDistribution
              - cloudfront:DeleteCloudFrontOriginAccessIdentity
              - cloudfront:DeleteDistribution
              - cloudfront:GetCloudFrontOriginAccessIdentity
              - cloudfront:GetCloudFrontOriginAccessIdentityConfig
              - cloudfront:GetDistribution
              - cloudfront:GetDistributionConfig
              - cloudfront:TagResource
              - cloudfront:UntagResource
              - cloudfront:UpdateCloudFrontOriginAccessIdentity
              - cloudfront:UpdateDistribution
              - cognito-identity:CreateIdentityPool
              - cognito-identity:DeleteIdentityPool
              - cognito-identity:DescribeIdentity
              - cognito-identity:DescribeIdentityPool
              - cognito-identity:SetIdentityPoolRoles
              - cognito-identity:UpdateIdentityPool
              - cognito-idp:AdminAddUserToGroup
              - cognito-idp:AdminCreateUser
              - cognito-idp:CreateGroup
              - cognito-idp:CreateUserPool
              - cognito-idp:CreateUserPoolClient
              - cognito-idp:DeleteGroup
              - cognito-idp:DeleteUser
              - cognito-idp:DeleteUserPool
              - cognito-idp:DeleteUserPoolClient
              - cognito-idp:DescribeUserPool
              - cognito-idp:DescribeUserPoolClient
              - cognito-idp:ListTagsForResource
              - cognito-idp:ListUserPoolClients
              - cognito-idp:UpdateUserPool
              - cognito-idp:UpdateUserPoolClient
              - dynamodb:CreateTable
              - dynamodb:DeleteItem
              - dynamodb:DeleteTable
              - dynamodb:DescribeContinuousBackups
              - dynamodb:DescribeTable
              - dynamodb:DescribeTimeToLive
              - dynamodb:ListStreams
              - dynamodb:PutItem
              - dynamodb:UpdateContinuousBackups
              - dynamodb:UpdateItem
              - dynamodb:UpdateTable
              - dynamodb:UpdateTimeToLive
              - es:CreateElasticsearchDomain
              - es:DeleteElasticsearchDomain
              - es:DescribeElasticsearchDomain
              - events:DeleteRule
              - events:DescribeRule
              - events:ListRuleNamesByTarget
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
              - iam:AttachRolePolicy
              - iam:CreatePolicy
              - iam:CreateRole
              - iam:DeletePolicy
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DetachRolePolicy
              - iam:GetRole
              - iam:GetUser
              - iam:PassRole
              - iam:PutRolePolicy
              - iam:UpdateRole
              - kinesis:CreateStream
              - kinesis:DeleteStream
              - kinesis:DescribeStream
              - kinesis:PutRecords
              - lambda:AddLayerVersionPermission
              - lambda:AddPermission
              - lambda:CreateEventSourceMapping
              - lambda:CreateFunction
              - lambda:DeleteEventSourceMapping
              - lambda:DeleteFunction
              - lambda:DeleteLayerVersion
              - lambda:GetEventSourceMapping
              - lambda:GetFunction
              - lambda:GetFunctionConfiguration
              - lambda:GetLayerVersion
              - lambda:GetLayerVersionByArn
              - lambda:InvokeAsync
              - lambda:InvokeFunction
              - lambda:ListEventSourceMappings
              - lambda:ListLayerVersions
              - lambda:PublishLayerVersion
              - lambda:RemoveLayerVersionPermission
              - lambda:RemovePermission
              - lambda:UpdateFunctionCode
              - lambda:UpdateFunctionConfiguration
              - lex:GetBot
              - lex:GetBuiltinIntent
              - lex:GetBuiltinIntents
              - lex:GetBuiltinSlotTypes
              - logs:DescribeLogStreams
              - logs:GetLogEvents
              - mobiletargeting:GetApp
              - rekognition:DescribeCollection
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:DeleteBucketPolicy
              - s3:DeleteBucketWebsite
              - s3:DeleteObject
              - s3:GetObject
              - s3:HeadBucket
              - s3:ListAllMyBuckets
              - s3:ListBucket
              - s3:PutObject
              - s3:PutBucketCORS
              - s3:PutBucketNotification
              - s3:PutBucketPolicy
              - s3:PutBucketWebsite
              - s3:PutBucketAcl
              - s3:PutObjectAcl
          Resource: "*"

  GithubCloudFormationUserGroup:
    Type: AWS::IAM::Group
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
  LukeShay:
    Type: AWS::IAM::User
    Properties:
      UserName: lukeshay
      Groups:
        - !Ref AdminUserGroup
      LoginProfile:
        Password: "{{resolve:secretsmanager:DefaultUserPassword:SecretString:DefaultUserPassword}}"
        PasswordResetRequired: true
    DependsOn: AdminUserGroup
  GithubCloudFormationUser:
    Type: AWS::IAM::User
    Properties:
      UserName: github-cloudformation-user
      Groups:
        - !Ref GithubCloudFormationUserGroup
    DependsOn: GithubCloudFormationUserGroup
  AmplifyUser:
    Type: AWS::IAM::User
    Properties:
      UserName: amplify-user
      Groups:
        - !Ref AmplifyUserGroup
    DependsOn: AmplifyUserGroup
Outputs:
  TemplateID:
    Description: "Template id."
    Value: "security/account-password-policy"
  TemplateVersion:
    Description: "Template version."
    Value: "__VERSION__"
  StackName:
    Description: "Stack name."
    Value: !Sub "${AWS::StackName}"
