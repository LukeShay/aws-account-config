Description: CloudFormation template for initializing AWS IAM
Resources:
  AdminUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: AdminUserGroup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  StandardUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: StandardUserGroup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
  ReadOnlyUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: ReadOnlyUserGroup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
  NonAdminUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NonAdminUserPolicy
      Groups:
        - !Ref ReadOnlyUserGroup
        - !Ref StandardUserGroup
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Resource: "*"
            Action:
              - aws-portal:*
              - cur:*
              - budgets:*
              - ce:*
              - pricing:*
              - purchase-orders:*
  CommonUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NonAdminUserPolicy
      Groups:
        - !Ref ReadOnlyUserGroup
        - !Ref StandardUserGroup
        - !Ref AdminUserGroup
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - iam:ChangePassword
  GithubUserGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: GithubUserGroup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
  LukeShay:
    Type: AWS::IAM::User
    Properties:
      UserName: lukeshay
      Groups:
        - !Ref AdminUserGroup
      LoginProfile:
        Password: "{{resolve:secretsmanager:DefaultUserPassword:SecretString:DefaultUserPassword}}"
        PasswordResetRequired: true
  TylerKrueger:
    Type: AWS::IAM::User
    Properties:
      UserName: tylerkrueger
      Groups:
        - !Ref ReadOnlyUserGroup
      LoginProfile:
        Password: "{{resolve:secretsmanager:DefaultUserPassword:SecretString:DefaultUserPassword}}"
        PasswordResetRequired: true
  GithubUser:
    Type: AWS::IAM::User
    Properties:
      UserName: github-user
      Groups:
        - !Ref GithubUserGroup
Outputs:
  TemplateID:
    Description: "Template id."
    Value: "security/account-password-policy"
  TemplateVersion:
    Description: "Template version."
    Value: "__VERSION__"
  StackName:
    Description: "Stack name."
    Value: !Sub "${AWS::StackName}"
